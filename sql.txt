create new table
----------------------------
create table category 
(
    id integer primary key auto_increment,
    name varchar(128) unique not null, 
    photo varchar(255) default NULL,
    created_at datetime default CURRENT_TIMESTAMP
)

insert row into table
1st method
------------------------------------------
syntax 
insert into <tablename> values ();
example 
insert into category values(0,'Diary','diary.jpg',CURRENT_TIMESTAMP);

2nd method 
-----------------------------------------
syntax
insert into <tablename> (<field-names>) values ();
insert new row with only name field
1) insert into category (name) values('Sun glass');

insert new row with only name,photo field
2) insert into category (name,photo) values('T-shirt','tshirt.jpg');


update existing row 
syntax 
update <tablename> set <field1>=value[,<field2>=value.....] [where condition]

example 
1) update category set photo='photo.jpg'
2) update category set name='Eye glass',photo='eye-glass.jpg' where id=4
3) update customers set creditLimit=creditLimit+11 where creditLimit<=100
4) update customers set creditLimit=creditLimit-1000 where creditLimit>=10000

delete existing row 
syntax
delete from <tablename> [where condition]
example 
1) delete from category 
2) delete from category where id<=2

empty table 
delete all rows and reset primary key to 1 
syntax 
truncate table <tablename>
truncate table category

delete table 
drop table <tablename>
drop table category

fetch data(rows) from tables 

syntax
-------------------------------
SELECT *|FIELDLIST|FUNCTION FROM <TABLENAME> [WHERE CONDITION] [GROUP BY FIELDNAME] [HAVING FUNCTION] [ORDER BY FIELDNAME] [LIMIT]

fetch all rows with all fields from table(customers)
select * from customers 

fetch few fields 
select customerNumber,customerName,city,state,country from customers

fetch rows as per condition 
example 
1) fetch customersNumber,Name,city,country from usa country 
select customerNumber,customerName,city,state,country from customers where country='usa'


2) fetch customersNumber,creditLimit of those customer whose creditLimit is below 10000
select customerNumber,creditLimit from customers where creditLimit<10000

3) fetch customersNumber,Name,city,country of customers who  from usa or france or spain 
select  customerNumber,customerName,city,state,country from customers where country='usa' or country='france' or country='spain';
                                            or 
select  customerNumber,customerName,city,state,country from customers where country in ('usa','france','spain')

4) fetch customerNumber,amount,paymentDate from payments where amount is between 10000 to 20000
select customerNumber,paymentDate,amount from payments where amount>=10000 and amount<=20000
                                    or 
select customerNumber,paymentDate,amount from payments where amount between 10000 and 20000

4) fetch customerNumber,amount,paymentDate of payments where paymentDate is in year 2004 
select customerNumber,paymentDate,amount from payments where paymentDate>='2004-01-01' and paymentDate<='2004-12-31'

5) fetch customerNumber and name of those customers whose name contains wheels at any position.
select customerNumber,customerName from customers  where customerName like '%wheels%'

6) fetch unique country name (no duplicate entry) from customers table. 
select distinct (country) from customers

fetch rows in particular orders (sequence)
display customerNumber,customerName,city,state,country in ascending order of country wise 
select customerNumber,customerName,city,state,country from customers order by country

display customerNumber,customerName,city,state,country in ascending order of country wise then state wise and then city wise.  
select customerNumber,customerName,city,state,country from customers order by country, state, city

display payment details in descending order of paymentdate 
select * from payments order by paymentDate desc 

limit no of rows (limit count of rows fetch in select statement)
fetch 10 latest payments 
select * from payments order by paymentDate desc limit 0,10

fetch highest top 20 payments in year 2004
select * from payments where paymentDate>='2004-01-01' and paymentDate<='2004-12-31' order by amount desc limit 0,20

Aggregate functions 
What is Aggregate functions. 
    function which returns single value after processing data is called Aggregate function.
Sum
    returns sum of numeric field 
Min 
    returns minimum value of given numeric field 
Max
    returns maximum value of given numeric field 
Avg
    returns average value of given numeric field 
Count
    returns no of rows in table 


get total amount of received payments 
    select sum(amount) from payments 
get minimum,maximum,average  amount of received payments 
    select min(amount) as minimum_amount ,max(amount) as maximum_amount ,avg(amount) as average_amount from payments 
get total no of payments (count of payments)
    select count(*) from payments 

get total amount of payments, no of payments customerNumber 112 
    select sum(amount),count(*) from payments where customerNumber=112

get customerNumber wise total payments 
    select customerNumber,sum(amount) from payments group by customerNumber

get total payment of each year 
    select left(paymentDate,4),sum(amount) from payments group by left(paymentdate,4)

